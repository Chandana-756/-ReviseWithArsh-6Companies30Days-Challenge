Code:
import java.util.Arrays;

public class Solution {
    public int maximizeSquareHoleArea(int n, int m, int[] hBars, int[] vBars) {
        int gap = Math.min(maxContinousGap(hBars), maxContinousGap(vBars));
        return gap * gap;
    }

    private int maxContinousGap(int[] bars) {
        int res = 2;
        int runningGap = 2;
        Arrays.sort(bars);
        for (int i = 1; i < bars.length; ++i) {
            runningGap = bars[i] == bars[i - 1] + 1 ? runningGap + 1 : 2;
            res = Math.max(res, runningGap);
        }
        return res;
    }
}

Time Complexity: O(nlogn)
Space Complexity: O(n+m)
