Code:
import java.util.Arrays;
import java.util.Comparator;

class Solution {
    public String frequencySort(String s) {
        int[] freq = new int['z' + 1];
        char[] chars = s.toCharArray();

        for (char c : chars) {
            freq[c]++;
        }

        Character[] uniqueChars = new Character['z' + 1];
        for (int i = 0; i <= 'z'; i++) {
            uniqueChars[i] = (char) i;
        }

        Arrays.sort(uniqueChars, Comparator.comparingInt(c -> freq[c]));

        StringBuilder res = new StringBuilder();
        for (int i = 'z'; i >= 0; i--) {
            char c = uniqueChars[i];
            res.append(String.valueOf(c).repeat(Math.max(0, freq[c])));
        }

        return res.toString();
    }
}

Time Complexity: O(n)
Space Complexity: O(n)
